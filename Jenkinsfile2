pipeline {
    agent any
    
    environment {
        DOCKER_REGISTRY = "docker.io/umitciftci"
        IMAGE_NAME = "my-webapp-image"
        CONTAINER_NAME = "my-webapp-container"
    }

    stages {
        stage('Pull latest Docker image') {
            steps {
                script {
                    docker.pull("${DOCKER_REGISTRY}/${IMAGE_NAME}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Stop and remove existing containers') {
            steps {
                script {
                    sh "docker stop ${CONTAINER_NAME} || true"
                    sh "docker rm ${CONTAINER_NAME} || true"
                }
            }
        }

        stage('Run a new container with the updated image') {
            steps {
                script {
                    docker.run("-d -p 8080:80 --name ${CONTAINER_NAME} ${DOCKER_REGISTRY}/${IMAGE_NAME}:${env.BUILD_NUMBER}")
                }
            }
        }
    }

    post {
        success {
            echo 'CD Pipeline succeeded! Dockerized application deployed.'
        }
        failure {
            echo 'CD Pipeline failed!'
        }
    }
}

